const {performance} = require('perf_hooks');

/**
 * Can the number n be generated by adding any times the numbers of the array?
 */
// n: number, m: length of array. O(n^2*m) Time | Space (n^2)
function howSumTabulation(n, array) {
    const table = Array(n + 1).fill(null);
    // initial condition, zero can be generated by empty array (no elements taken)
    table[0] = [];

    for (let currentNum = 0; currentNum <= n; currentNum++) {
        // skip if we can't generate the number
        if (table[currentNum] === null) continue;

        for (let i = 0; i < array.length; i++) {
            const num = array[i];
            const nextNum = currentNum + num;
            if (nextNum <= n) {
                const newArray = table[currentNum].slice();
                newArray.push(num);
                table[nextNum] = newArray;
            }
        }
    }

    return table[n];
}

function measure(n, array, func) {
    const startTime = performance.now();
    const result = func(n, array);
    const endTime = performance.now();
    return [endTime - startTime, result];
}

const tests = [
    { n: 7, array: [2, 3], expected: [2, 2, 3] },
    { n: 7, array: [5, 3, 4, 7], expected: [3, 4] },
    { n: 7, array: [2, 4], expected: null },
    { n: 8, array: [2, 3, 5], expected: [2, 2, 2, 2] },
    { n: 300, array: [7, 14], expected: null }
];

for (const test of tests) {
    const [deltaTime, result] = measure(test.n, test.array, howSumTabulation);
    console.log('n:', test.n, 'array:', test.array, 'expected:', test.expected, 'result:', result, 'deltaTime:', deltaTime);
}